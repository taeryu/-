<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>카카오API 검색</title>
    <!--axios CDN-->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

</head>

<body>

    <h1>카카오API 검색</h1>
    <input id="query" style="width: 100px;"/>
    <button id="button" onclick="카카오검색()"> 카카오검색</button>
    <div class="검색결과"></div>

</body>

<script>

    var REST_API_KEY = '35659768318faa6d3680f65f473ac459';


    
    document.getElementById("button").addEventListener("click", 카카오검색)
    

    //onclick에는 하나의 콜백만 지정할 수 있지만, addEventListener를 사용하면 여러 개의 이벤트 리스너를 추가할 수 있다. 따라서 만약 onclick 이벤트 핸들러를 두 번 이상 사용한다면, 기존 이벤트 핸들러를 덮어쓰기 때문에 가장 아래에 추가한 핸들러만 제대로 작동한다. 반면, addEventListener는 기존 이벤트 핸들러를 덮어 쓰지 않고 얼마든지 계속해서 핸들러를 추가해도 모든 핸들러가 정상적으로 작동한다.

    function 카카오검색() {
        var query = document.getElementById("query").value;
        axios({
            method: 'get',
            url: `https://dapi.kakao.com/v2/search/web?query=${query}`,
            headers: { 'Authorization': 'KakaoAK ' + REST_API_KEY }
        })
            .then(function (res) {
                for (var i = 0; i < res.data.documents.length; i++) {

                    var res_contents = JSON.stringify(res.data.documents[i].contents).replace('"'|'<b>'|'</b>','')
                    const 내용태그 = document.createElement("p")
                    내용태그.innerHTML = res_contents
                                        
                    var res_url = JSON.stringify(res.data.documents[i].url)
                    const 링크태그 = document.createElement("a")
                    링크태그.href = res_url.slice(1,-1)
                    링크태그.target = "_blank"
                    링크태그.text = "link"

                    document.querySelector(".검색결과").appendChild(내용태그)
                    document.querySelector(".검색결과").appendChild(링크태그)

                }
            }
            )
    }

</script>

</html>
